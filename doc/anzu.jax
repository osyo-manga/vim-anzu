*anzu.txt*		検索時の位置情報を表示するプラグインです。

==============================================================================
目次						*anzu-contents*

概要				|anzu-introduction|
使い方				|anzu-usage|
anzu-mode			|anzu-mode|
インターフェース		|anzu-interface|
  コマンド			  |anzu-commands|
  関数				  |anzu-functions|
  キーマッピング		  |anzu-key-mappings|
  Autocommands			  |anzu-autocommands|
設定				|anzu-setting|
  変数				  |anzu-variables|
unite-anzu			|unite-anzu|


==============================================================================
概要						*anzu-introduction*

*anzu* は検索時に検索位置を視覚的に分かりやすく補助するためのプラグインで
す。
(2/10) のような表示やブラウザなどのツールで検索時にサイドバーに検索位置
が表示される機能を |:sign| を使用してエミュレートしています。

基本的に移動を行うキー（|n| や |N| など）にマッピングして使用します。

-Requires
 Vim version 7.3.867 以上


==============================================================================
使い方						*anzu-usage*

Example: >
	" n や N の代わりに使用します。
	nmap n <Plug>(anzu-n)
	nmap N <Plug>(anzu-N)
	nmap * <Plug>(anzu-star)
	nmap # <Plug>(anzu-sharp)

	" g* 時にステータス情報を出力する場合
	nmap g* g*<Plug>(anzu-update-search-status-with-echo)

	" 最後に検索したワードの [count] の位置へ移動する
	" 10<Leader>j であれば先頭から10番目のワードの位置へ移動する
	nmap <Leader>j <Plug>(anzu-jump)
	" ステータス情報をコマンドラインに出力する場合はこちら
	" nmap <Leader>j <Plug>(anzu-jump)<Plug>(anzu-echo-search-status)

	" ステータス情報を statusline へと表示する
	set statusline=%{anzu#search_status()}
	
	" こちらを使用すると
	" 移動後にステータス情報をコマンドラインへと出力を行います。
	" nmap n <Plug>(anzu-n-with-echo)
	" nmap N <Plug>(anzu-N-with-echo)
	" nmap * <Plug>(anzu-star-with-echo)
	" nmap # <Plug>(anzu-sharp-with-echo)

	" sign も一緒に使用する場合
	" nmap n <Plug>(anzu-n-with-echo)<Plug>(anzu-sign-matchline)
	" nmap N <Plug>(anzu-N-with-echo)<Plug>(anzu-sign-matchline)


==============================================================================
anzu-mode					*anzu-mode*

|anzu-mode| とは検索したワードの横に件数を表示するモードです。
例えば /anzu と検索した場合、
>
	anzu(1/2)_homu
	anzu(2/2)_mami
<
というようにバッファ上の検索したワードの横に件数が表示されます。
このモードを開始する場合、

次の関数、もしくはマッピングを呼び出す必要がありま
す。
 >
	" anzu-mode を開始する
	" "anzu" で検索を行ってから n で移動を行い
	" anzu-mode になります
	call anzu#mode#start("anzu", "n", "", "")

	" n の後に anzu-mode を開始する
	nmap n <Plug>(anzu-mode-n)
	" N の後に anzu-mode を開始する
	nmap N <Plug>(anzu-mode-N)
<
|anzu-mode| では |n| か |N| キーのみ受け付けます。
それ以外のキーが押された場合、|anzu-mode| は終了します。


==============================================================================
インターフェース				*anzu-interface*

------------------------------------------------------------------------------
コマンド					*anzu-commands*

:AnzuClearSearchStatus				*:AnzuClearSearchStatus*
	ステータス情報をクリアします。

:AnzuUpdateSearchStatus				*:AnzuUpdateSearchStatus*
	現在のカーソル位置でステータス情報を更新します。
	カーソル位置が検索位置とマッチした場合にのみ情報が更新されます。

	また、このコマンドだけではステータス情報を出力しないので
	|anzu#search_status()| と組み合わせて使用して下さい。

	Example: >
		" カーソルが移動するたびに更新する
		augroup anzu-update-search-status
			autocmd!
			autocmd CursorMoved *
			\ :AnzuUpdateSearchStatus|echo anzu#search_status()
		augroup END
	<

:AnzuSignMatchLine[!] [{pattern}]			*:AnzuSignMatchLine*
	バッファ内の {pattern} に一致する行を全体の相対的な位置で |:sign| しま
	す。
	（ブラウザなどのツールで検索時にサイドバーに検索位置が表示されるアレ）

	[!] が使用された場合は |anzu#sign_matchline| が呼ばれ、[!] がない場合
	は |anzu#smart_sign_matchline| が使用されます。
	強制的に |:sign| を行いたい場合は [!] を使用して下さい。

	|anzu| 以外の |:sign| を使用していると上書きされる可能性があるので注意
	して下さい。
	{pattern} がない場合は |@/| の値を使用します。

:AnzuClearSignMatchLine [{pattern}]		*:AnzuClearSignMatchLine*
	|anzu| で設定された |:sign| を削除します。
	|anzu| 以外の |:sign| も削除される可能性があるので注意して下さい。
	また |:sign-unplace| を使用して |:sign| を削除した場
	合、|:AnzuSignMatchLine| が正しく動作しない可能性があります。
	その場合は、このコマンドを呼び出してから |:AnzuSignMatchLine| を呼び出
	して下さい。

:AnzuClearSearchCache				*:AnzuClearSearchCache*
	カレントバッファの検索情報のキャッシュをクリアします。

:AnzuUpdateSearchStatusOutput			*AnzuUpdateSearchStatusOutput*
	|:AnzuUpdateSearchStatus| 後に |anzu#search_status()| を |:echo| で出
	力します。


------------------------------------------------------------------------------
関数						*anzu-functions*

anzu#search_status()				*anzu#search_status()*
	現在のステータス情報を文字列で返します。

anzu#clear_search_status()			*anzu#clear_search_status()*
	ステータス情報をクリアします。

anzu#echohl_search_status()			*anzu#echohl_search_status()*
	ステータス情報を |:echohl| でハイライトして出力します。
	この時に使用されるハイライトグループは |g:anzu_status_format| で設定し
	たものが使用されます。

anzu#sign_matchline({pattern})			*anzu#sign_matchline()*
	{pattern} の位置を |:sign| します。

anzu#smart_sign_matchline({pattern})		*anzu#smart_sign_matchline()*
	{pattern} の位置を |:sign| します。
	基本的には |anzu#sign_matchline| と同じ動作になりますが、なる
	べく無駄な |:sign| を行わないようになっています。
	（e.g.カーソルがウィンドウの外に出ていない場合は |:sign| しない）

	ただし、場合によっては正しく |:sign| が行われない事もあるので注意して
	下さい。
	（e.g.|:sign| の削除に|AnzuClearSignMatchLine| ではなく |:sign-unplace|
	を使用した場合など）

anzu#clear_sign_matchline()			*anzu#clear_sign_matchline()*
	|:sign| を削除します。

anzu#clear_search_cache([{bufnr}])		*anzu#clear_search_cache()*
	バッファ番号{bufnr} の検索データのキャッシュをクリアします。
	これは |TextChanged| |TextChangedI| で呼ばれます。

						*anzu#mode#start()*
anzu#mode#start({pattern}, {key}, {prefix}, {suffix})
	{pattern} で検索を行う |anzu-mode| を開始します。
	この時に最初に {key} のキーが呼ばれます。
	{prefix} と {suffix} にはそれぞれ |anzu-mode| で |n| や |N| が押された
	場合に prefix と suffix として追加されます。
Example: >
	" anzu で検索し、最初に n で移動し anzu-mode に入る
	" anzu-mode で n や N が押された場合、
	" nzzzv や Nzzzv として処理される
	call anzu#mode#start("anzu", "n", "", "zzzv")
<

anzu#mode#mapexpr({key}, {prefix}, {suffix})	*anzu#mode#mapexpr()*
	|:map-<expr>| で使用する以外は |anzu#mode#start()| と同じ挙動です。
	{pattern} には |@/| が使用されます。
Example: >
	" anzu-mode で n を押した場合に nzzzv として処理する
	nnoremap <expr> n anzu#mode#mapexpr("n", "", "zzzv")
	" anzu-mode で N を押した場合に Nzzzv として処理する
	nnoremap <expr> N anzu#mode#mapexpr("N", "", "zzzv")


------------------------------------------------------------------------------
キーマッピング					*anzu-key-mappings*

<Plug>(anzu-update-search-status)		*<Plug>(anzu-update-search-status)*
	ステータス情報を更新します。
	基本的には |n| や |N| と併用して使用します。
	このマッピングは移動を行うマッピングよりも後で呼び出して下さい。

Example: >
	" n や N の後で呼び出す。
	nmap n n<Plug>(anzu-update-search-status)
	nmap N N<Plug>(anzu-update-search-status)
<

<Plug>(anzu-clear-search-status)		*<Plug>(anzu-clear-search-status)*
	ステータス情報をクリアします。

<Plug>(anzu-clear-search-cache)			*<Plug>(anzu-clear-search-cache)*
	カレントバッファの検索情報のキャッシュをクリアします。

<Plug>(anzu-echo-search-status)			*<Plug>(anzu-echo-search-status)*
	ステータス情報をコマンドラインへ出力します。
	このマッピングではステータス情報を更新しないので注意して下さい。
	ステータス情報も更新する場合は
	|<Plug>(anzu-update-search-status-with-echo)| を使用して下さい。

Example: >
	" 前回のステータス情報を再出力する
	nmap <A-p> <Plug>(anzu-update-search-status-with-echo)
<

<Plug>(anzu-update-search-status-with-echo)	*<Plug>(anzu-update-search-status-with-echo)*
	ステータス情報を更新後にコマンドラインへと出力します。
	このマッピングは移動を行うマッピングよりも後で呼び出して下さい。

Example: >
	" g* の後で呼び出す。
	nmap g* g*<Plug>(anzu-update-search-status-with-echo)
<

<Plug>(anzu-n)					*<Plug>(anzu-n)*
	|<Plug>(anzu-search-status-update)| がフックされている以外は |n| と同様
	の挙動です。

<Plug>(anzu-n-with-echo)			*<Plug>(anzu-n-with-echo)*
	|<Plug>(anzu-n)| 後にコマンドラインにステータス情報を出力します。

<Plug>(anzu-N)					*<Plug>(anzu-N)*
	|<Plug>(anzu-search-status-update)| がフックされている以外は |N| と同様
	の挙動です。

<Plug>(anzu-N-with-echo)			*<Plug>(anzu-N-with-echo)*
	|<Plug>(anzu-N)| 後にコマンドラインにステータス情報を出力します。

<Plug>(anzu-star)				*<Plug>(anzu-star)*
	|<Plug>(anzu-search-status-update)| がフックされている以外は |star| と同
	様の挙動です。

<Plug>(anzu-star-with-echo)			*<Plug>(anzu-star-with-echo)*
	|<Plug>(anzu-star)| 後にコマンドラインにステータス情報を出力します。

<Plug>(anzu-sharp)				*<Plug>(anzu-sharp)*
	|<Plug>(anzu-search-status-update)| がフックされている以外は |#| と同様
	の挙動です。

<Plug>(anzu-sharp-with-echo)			*<Plug>(anzu-sharp-with-echo)*
	|<Plug>(anzu-sharp)| 後にコマンドラインにステータス情報を出力します。

<Plug>(anzu-sign-matchline)			*<Plug>(anzu-sign-matchline)*
	|:AnzuSignMatchLine| を [!] 付きで呼び出します。
	|:AnzuSignMatchLine| の引数には |@/| が使用されます。
	このマッピングは移動を行うマッピングよりも後で呼び出して下さい。

Example: >
	" n や N の後で呼び出す。
	nmap n n<Plug>(anzu-sign-matchline)
	nmap N N<Plug>(anzu-sign-matchline)
<

<Plug>(anzu-clear-sign-matchline)		*<Plug>(anzu-clear-sign-matchline)*
	|:AnzuClearSignMatchLine| を呼び出します。
	|:AnzuSignMatchLine| を [!] ありで呼び出します。

<Plug>(anzu-smart-sign-matchline)		*<Plug>(anzu-smart-sign-matchline)*
	基本的には |<Plug>(anzu-sign-matchline)| と同じです。
	|:AnzuSignMatchLine| を [!] なしで呼び出します。

<Plug>(anzu-jump)				*<Plug>(anzu-jump)*
	最後に検索したワードの [count] の位置へ移動します。
	[count] がない、もしくは範囲外であれば移動はしません。
Example: >
	" 最後に検索したワードの [count] の位置へ移動する
	" 10<Leader>j であれば先頭から10番目のワードの位置へ移動する
	nmap <Leader>j <Plug>(anzu-jump)
	" ステータス情報をコマンドラインに出力する場合はこちら
	" nmap <Leader>j <Plug>(anzu-jump)<Plug>(anzu-echo-search-status)
<

<Plug>(anzu-jump-n)				*<Plug>(anzu-jump-n)*
	最後に検索したワードの [count] の位置へ移動します。
	10<Plug>(anzu-jump-n) であればバッファの先頭から10番目のワードの位置へ
	移動します。
	[count] がなければ |<Plug>(anzu-n)| を使用します。
	[count] が範囲外であれば移動はしません。
Example: >
	nmap n <Plug>(anzu-jump-n)

	" 位置をコマンドラインに出力したい場合
	nmap n <Plug>(anzu-jump-n)<Plug>(anzu-echo-search-status)
<
<Plug>(anzu-jump-N)				*<Plug>(anzu-jump-N)*
	最後に検索したワードの [count] の位置へ移動します。
	[count] がない場合に |<Plug>(anzu-N)| が使用される以外は
	|<Plug>(anzu-jump-n)| と同じです。

<Plug>(anzu-jump-star)				*<Plug>(anzu-jump-star)*
	カーソルに最も近い単語の [count] の位置へ移動します。
	[count] がない場合に |<Plug>(anzu-star)| が使用される以外は
	|<Plug>(anzu-jump-n)| と同じです。

<Plug>(anzu-jump-sharp)				*<Plug>(anzu-jump-sharp)*
	[count] がない場合に |<Plug>(anzu-sharp)| が使用される以外は
	|<Plug>(anzu-jump-sharp)| と同じです。

<Plug>(anzu-mode-n)				*<Plug>(anzu-mode-n)*
	|anzu-mode| を開始し、直後 |n| で移動します。

<Plug>(anzu-mode-N)				*<Plug>(anzu-mode-N)*
	|anzu-mode| を開始し、直後 |N| で移動します。

<Plug>(anzu-mode)				*<Plug>(anzu-mode)*
	|anzu-mode| を開始しますが、カーソルの移動は行ないません。


------------------------------------------------------------------------------
Autocommands					*anzu-autocommands*

AnzuWrap		            		*AnzuWrap*
        An |User| autocommand, triggered when search has reached the end, and
        moving to the other side.

Example: >
        augroup Anzu
            autocmd!
            autocmd User AnzuWrap call sound_playevent('bell')
        augroup END
<

==============================================================================
設定						*anzu-setting*

------------------------------------------------------------------------------
変数						*anzu-variables*

g:anzu_status_format				*g:anzu_status_format*
	ステータス情報のフォーマットを設定します。

	シンボル	展開値~
	--------	------~
	%p		検索パターン
	%/		%p と同等だが offset も付属される(histget("search",
			-1) の値)
	%i		現在の位置
	%l		一致した個数
	%#		強調グループ(see: 'statusline')
	%w		末尾から先頭、または先頭から末尾に移動した際に表示され
			るメッセージ

Default: >
	let g:anzu_status_format = "%p(%i/%l)"

	" highlight "WarningMsg"
	let g:anzu_status_format = "%#WarningMsg#%p(%i/%l)"
<

g:anzu_search_limit				*g:anzu_search_limit*
	検索するワードの個数の最大値を設定します。
	この変数に設定されている値よりも多くヒットした場合、その場で検索を終了
	します。
	ヒットするワードが多すぎて動作が遅くなってしまう場合はこの変数に低い値
	を設定して下さい。

Default: >
	let g:anzu_search_limit = 1000
<


g:anzu_no_match_word				*g:anzu_no_match_word*
	検索時にマッチしなかった場合に |anzu#search_status()|
	|<Plug>(anzu-echo-search-status)| で出力する文字列です。
	|g:anzu_status_format| と同様のシンボルを設定する事ができます。

Default: >
	let g:anzu_no_match_word = ""
<

			*g:anzu_enable_CursorMoved_AnzuUpdateSearchStatus*
g:anzu_enable_CursorMoved_AnzuUpdateSearchStatus
	1 が設定されていれば |CursorMoved| 時にチェックを行い、カーソル位置と
	検索したワードの位置が同じであれば検索結果を出力します。
	|n| 等を再マップしたくない場合などカーソル移動するたびに検索結果を出力
	したい場合に使用して下さい。

Default: >
	let g:anzu_enable_CursorMoved_AnzuUpdateSearchStatus = 0
<

g:airline#extensions#anzu#enabled	*g:airline#extensions#anzu#enabled*
	|airline| にステータス情報を表示するかどうかの設定を行います。
	0 が設定されていれば |airline| には表示されません。

g:anzu_bottomtop_word				*g:anzu_bottomtop_word*
	|<Plug>(anzu-n-with-echo)| 等で末尾から先頭に移動した際に表示する文字
	列です。
	|g:anzu_status_format| の %w に置き換えられます。
Default: >
	let g:anzu_bottomtop_word = "search hit BOTTOM, continuing at TOP"
<

g:anzu_topbottom_word				*g:anzu_topbottom_word*
	|<Plug>(anzu-N-with-echo)| 等で先頭から末尾に移動した際に表示する文字
	列です。
	|g:anzu_status_format| の %w に置き換えられます。
Default: >
	let g:anzu_topbottom_word = "search hit TOP, continuing at BOTTOM"
<

==============================================================================
unite-anzu					*unite-anzu*

>
	" {pattern} にマッチした行を unite.vim で出力
	:Unite anzu:{pattern}
<


==============================================================================
vim:tw=78:fo=tcq2mM:ts=8:ft=help:norl
